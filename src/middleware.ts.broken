// src/middleware.ts - VERSIÓN CONDICIONAL
import { defineMiddleware } from 'astro:middleware';
import { supabase } from './lib/supabase';

export const onRequest = defineMiddleware(async (context, next) => {
  // ✅ SOLO EJECUTAR EN MODO SERVIDOR
  if (import.meta.env.SSR === false) {
    return next();
  }
  
  try {
    const sessionCookie = context.cookies.get('sb-access-token');
    
    if (sessionCookie && supabase) {
      const { data: { user }, error } = await supabase.auth.getUser(sessionCookie.value);
      
      if (!error && user) {
        (context.locals as any).user = user;
      }
    }
  } catch (error) {
    console.log('Error in middleware (no crítico):', error);
    // No fallar, solo continuar
  }
  
  return next();
});