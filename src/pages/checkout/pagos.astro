---
// src/pages/checkout/pagos.astro - INTEGRACI√ìN WOMPI COMPLETAMENTE CORREGIDA
import Layout from '../../components/layout/Layout.astro';
import { supabase } from '../../lib/supabase';
import type { Order } from '../../lib/types';

// ‚úÖ OBTENER Y VALIDAR ORDER ID
const url = new URL(Astro.request.url);
const orderId = url.searchParams.get('order');

let order: Order | null = null;
let error: string | null = null;

// ‚úÖ VALIDACI√ìN Y CARGA DE ORDEN
if (!orderId) {
  error = 'ID de orden requerido';
} else {
   try {
    if (!supabase) {
      error = 'Servicio no disponible';
    } else {
      const { data, error: fetchError } = await supabase
        .from('orders')
        .select('*')
        .eq('id', orderId)
        .eq('payment_status', 'pending')
        .single();
    
    if (fetchError) {
      console.error('Error fetching order:', fetchError);
      error = 'Orden no encontrada o ya procesada';
    } else {
      order = data;
      if (order) {
        console.log('‚úÖ Orden cargada para pago:', order.order_number);
      }
    }
}

// ‚úÖ REDIRIGIR SI HAY ERROR
if (!order || error) {
  console.error('‚ùå Error en pagos:', error);
  return Astro.redirect('/checkout?error=' + encodeURIComponent(error || 'Orden no v√°lida'));
}

// ‚úÖ CONFIGURACI√ìN WOMPI (con validaci√≥n)
const WOMPI_PUBLIC_KEY = import.meta.env.PUBLIC_WOMPI_PUBLIC_KEY || 'pub_test_QGtAUdYs7u3CQWmCk44nPbGQNEkwabKD';
const WOMPI_URL = import.meta.env.PUBLIC_WOMPI_URL || 'https://checkout.wompi.co';

// Validar configuraci√≥n
if (!WOMPI_PUBLIC_KEY) {
  console.error('‚ùå WOMPI_PUBLIC_KEY no configurado');
  return Astro.redirect('/checkout?error=Configuraci√≥n de pago no disponible');
}

// ‚úÖ FUNCIONES UTILITARIAS
const formatPrice = (price: number): string => {
  try {
    const validPrice = typeof price === 'number' && !isNaN(price) && price >= 0 ? price : 0;
    return new Intl.NumberFormat('es-CO', {
      style: 'currency',
      currency: 'COP',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(validPrice);
  } catch (error) {
    return `$${price.toLocaleString('es-CO')}`;
  }
};
---

<Layout 
  title={`Pagar Pedido #${order.order_number} - mueblesmartek.com`}
  description="Completa tu pago de forma segura con Wompi"
  noIndex={true}
>
  <div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- ‚úÖ HEADER MEJORADO -->
      <div class="text-center mb-8">
        <div class="inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4">
          <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Finalizar Pago</h1>
        <p class="text-gray-600">Pedido #{order.order_number}</p>
        <p class="text-sm text-gray-500 mt-1">
          Total a pagar: <span class="font-semibold text-gray-800">{formatPrice(order.total)}</span>
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        
        <!-- ‚úÖ COLUMNA IZQUIERDA: M√âTODOS DE PAGO -->
        <div class="lg:col-span-2 space-y-6">
          
          <!-- Informaci√≥n de Seguridad -->
          <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div class="flex items-start space-x-3">
              <svg class="w-6 h-6 text-blue-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
              <div>
                <h3 class="text-sm font-semibold text-blue-900 mb-1">Pago 100% Seguro</h3>
                <p class="text-xs text-blue-700">Procesado por Wompi - Certificaci√≥n PCI DSS</p>
                <p class="text-xs text-blue-600 mt-1">Tus datos financieros est√°n protegidos</p>
              </div>
            </div>
          </div>

          <!-- ‚úÖ M√âTODOS DE PAGO MEJORADOS -->
          <div class="bg-white rounded-lg shadow-sm border p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-6">Selecciona tu m√©todo de pago</h2>
            
            <div class="space-y-4">
              
              <!-- Tarjeta de Cr√©dito/D√©bito -->
              <div class="payment-method-option border rounded-lg p-4 cursor-pointer transition-all hover:border-gray-400" data-method="card">
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <div class="payment-indicator w-5 h-5 border-2 border-gray-300 rounded-full flex items-center justify-center">
                      <div class="w-2.5 h-2.5 bg-red-600 rounded-full opacity-0 transition-opacity"></div>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                      </svg>
                      <div>
                        <p class="font-medium text-gray-800">Tarjeta de Cr√©dito/D√©bito</p>
                        <p class="text-sm text-gray-500">Visa, Mastercard, American Express</p>
                      </div>
                    </div>
                  </div>
                  
                  <div class="flex items-center space-x-2">
                    <img src="/icons/visa.svg" alt="Visa" class="h-6" />
                    <img src="/icons/mastercard.svg" alt="Mastercard" class="h-6" />
                    <img src="/icons/amex.svg" alt="American Express" class="h-6" />
                  </div>
                </div>
                <input type="radio" name="payment_method" value="card" class="payment-radio hidden" />
              </div>

              <!-- PSE -->
              <div class="payment-method-option border rounded-lg p-4 cursor-pointer transition-all hover:border-gray-400" data-method="pse">
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <div class="payment-indicator w-5 h-5 border-2 border-gray-300 rounded-full flex items-center justify-center">
                      <div class="w-2.5 h-2.5 bg-red-600 rounded-full opacity-0 transition-opacity"></div>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                      </svg>
                      <div>
                        <p class="font-medium text-gray-800">PSE</p>
                        <p class="text-sm text-gray-500">D√©bito directo desde tu banco</p>
                      </div>
                    </div>
                  </div>
                  
                  <div class="text-sm text-gray-500">
                    üè¶ Todos los bancos
                  </div>
                </div>
                <input type="radio" name="payment_method" value="pse" class="payment-radio hidden" />
              </div>

              <!-- Nequi -->
              <div class="payment-method-option border rounded-lg p-4 cursor-pointer transition-all hover:border-gray-400" data-method="nequi">
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-3">
                    <div class="payment-indicator w-5 h-5 border-2 border-gray-300 rounded-full flex items-center justify-center">
                      <div class="w-2.5 h-2.5 bg-red-600 rounded-full opacity-0 transition-opacity"></div>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-8 h-8 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                      </svg>
                      <div>
                        <p class="font-medium text-gray-800">Nequi</p>
                        <p class="text-sm text-gray-500">Pago desde tu app Nequi</p>
                      </div>
                    </div>
                  </div>
                  
                  <div class="text-sm font-medium text-purple-600">
                    üì± Nequi
                  </div>
                </div>
                <input type="radio" name="payment_method" value="nequi" class="payment-radio hidden" />
              </div>

            </div>

            <!-- ‚úÖ BOT√ìN DE PAGO MEJORADO -->
            <div class="mt-8">
              <button id="pay-button" 
                      class="w-full bg-gray-900 text-white py-4 px-6 rounded-lg hover:bg-gray-800 transition-all duration-200 font-medium text-lg flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
                      disabled>
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                </svg>
                <span>Selecciona un m√©todo de pago</span>
              </button>
              
              <p class="text-xs text-gray-500 text-center mt-3">
                Al hacer clic en pagar, ser√°s redirigido a la plataforma segura de Wompi
              </p>
            </div>
          </div>
        </div>

        <!-- ‚úÖ COLUMNA DERECHA: RESUMEN DE ORDEN -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-lg shadow-sm border p-6 sticky top-4">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Resumen del pedido</h3>
            
            <!-- Informaci√≥n de env√≠o -->
            <div class="mb-6 pb-6 border-b">
              <h4 class="text-sm font-medium text-gray-700 mb-2">Enviar a:</h4>
              <div class="text-sm text-gray-600">
                <p class="font-medium">{order.shipping_address?.full_name}</p>
                <p>{order.shipping_address?.address_line_1}</p>
                {order.shipping_address?.address_line_2 && (
                  <p>{order.shipping_address.address_line_2}</p>
                )}
                <p>{order.shipping_address?.city}, {order.shipping_address?.state}</p>
                <p>{order.shipping_address?.postal_code}</p>
                <p class="mt-1">{order.shipping_address?.phone}</p>
              </div>
            </div>

            <!-- Items de la orden -->
            <div class="mb-6 pb-6 border-b">
              <h4 class="text-sm font-medium text-gray-700 mb-3">Productos ({order.items?.length || 0})</h4>
              <div class="space-y-3 max-h-40 overflow-y-auto">
                {order.items?.map((item: any) => (
                  <div class="flex items-center space-x-3">
                    <div class="flex-shrink-0 w-10 h-10 bg-gray-100 rounded">
                      <div class="w-full h-full flex items-center justify-center text-xs text-gray-500">
                        {item.quantity}x
                      </div>
                    </div>
                    <div class="flex-1 min-w-0">
                      <p class="text-sm font-medium text-gray-800 truncate">{item.product_name}</p>
                      <p class="text-xs text-gray-500">{formatPrice(item.price)}</p>
                    </div>
                    <p class="text-sm font-medium">{formatPrice(item.total)}</p>
                  </div>
                ))}
              </div>
            </div>

            <!-- Totales -->
            <div class="space-y-2">
              <div class="flex justify-between text-sm">
                <span>Subtotal</span>
                <span>{formatPrice(order.subtotal || 0)}</span>
              </div>
              <div class="flex justify-between text-sm">
                <span>Env√≠o</span>
                <span class={order.shipping_cost === 0 ? 'text-green-600 font-medium' : ''}>
                  {order.shipping_cost === 0 ? 'Gratis' : formatPrice(order.shipping_cost || 0)}
                </span>
              </div>
              <div class="flex justify-between text-sm">
                <span>IVA (19%)</span>
                <span>{formatPrice(order.tax || 0)}</span>
              </div>
              <div class="border-t pt-2 flex justify-between font-semibold text-lg">
                <span>Total</span>
                <span>{formatPrice(order.total)}</span>
              </div>
            </div>
          </div>
        </div>

      </div>

      <!-- ‚úÖ INFORMACI√ìN ADICIONAL -->
      <div class="mt-12">
        <div class="bg-white rounded-lg border p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">¬øNecesitas ayuda?</h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
            
            <div class="text-center">
              <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h4 class="font-medium text-gray-800 mb-2">Soporte</h4>
              <p class="text-sm text-gray-600 mb-2">¬øTienes problemas con el pago?</p>
              <a href="/contacto" class="text-sm text-gray-800 font-medium hover:text-red-600 transition-colors">
                Contactar soporte ‚Üí
              </a>
            </div>

            <div class="text-center">
              <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                </svg>
              </div>
              <h4 class="font-medium text-gray-800 mb-2">Env√≠o seguro</h4>
              <p class="text-sm text-gray-600">Entrega en 2-5 d√≠as h√°biles</p>
            </div>

            <div class="text-center">
              <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h4 class="font-medium text-gray-800 mb-2">Garant√≠a</h4>
              <p class="text-sm text-gray-600">30 d√≠as de garant√≠a</p>
            </div>
            
          </div>
        </div>
      </div>

    </div>
  </div>
</Layout>

<!-- ‚úÖ CARGAR WOMPI SDK CON MANEJO DE ERRORES -->
<script src="https://checkout.wompi.co/widget.js" async onload="console.log('‚úÖ Wompi SDK cargado')" onerror="console.error('‚ùå Error cargando Wompi SDK')"></script>

<!-- ‚úÖ SCRIPT PRINCIPAL - CORREGIDO Y ROBUSTO -->
<script define:vars={{ 
  order: order,
  WOMPI_PUBLIC_KEY: WOMPI_PUBLIC_KEY,
  WOMPI_URL: WOMPI_URL
}}>
  console.log('üè¶ Inicializando p√°gina de pagos v2.0...');

  // ‚úÖ VARIABLES GLOBALES
  let selectedPaymentMethod = null;
  let isWompiReady = false;
  let paymentInProgress = false;

  // ‚úÖ FUNCIONES UTILITARIAS
  function formatPrice(price) {
    try {
      const validPrice = typeof price === 'number' && !isNaN(price) && price >= 0 ? price : 0;
      return new Intl.NumberFormat('es-CO', {
        style: 'currency',
        currency: 'COP',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }).format(validPrice);
    } catch (error) {
      return `$${price.toLocaleString('es-CO')}`;
    }
  }

  function showError(message, duration = 5000) {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'fixed top-4 right-4 z-50 bg-red-600 text-white px-6 py-3 rounded-md shadow-lg transform transition-all duration-300';
    errorDiv.textContent = message;
    
    document.body.appendChild(errorDiv);
    
    setTimeout(() => {
      errorDiv.classList.add('translate-x-full', 'opacity-0');
      setTimeout(() => errorDiv.remove(), 300);
    }, duration);
  }

  function showSuccess(message, duration = 3000) {
    const successDiv = document.createElement('div');
    successDiv.className = 'fixed top-4 right-4 z-50 bg-green-600 text-white px-6 py-3 rounded-md shadow-lg transform transition-all duration-300';
    successDiv.textContent = message;
    
    document.body.appendChild(successDiv);
    
    setTimeout(() => {
      successDiv.classList.add('translate-x-full', 'opacity-0');
      setTimeout(() => successDiv.remove(), 300);
    }, duration);
  }

  // ‚úÖ CONFIGURAR M√âTODOS DE PAGO
  function setupPaymentMethods() {
    const methodOptions = document.querySelectorAll('.payment-method-option');
    const indicators = document.querySelectorAll('.payment-indicator');
    const payButton = document.getElementById('pay-button');

    methodOptions.forEach((option, index) => {
      option.addEventListener('click', function() {
        if (paymentInProgress) return;

        const method = this.getAttribute('data-method');
        const radio = this.querySelector('.payment-radio');
        
        // Reset all indicators
        indicators.forEach(indicator => {
          indicator.classList.remove('border-red-600');
          indicator.classList.add('border-gray-300');
          const dot = indicator.querySelector('div');
          if (dot) dot.classList.add('opacity-0');
        });

        methodOptions.forEach(opt => {
          opt.classList.remove('border-gray-900', 'bg-gray-50');
          opt.classList.add('border-gray-300');
        });
        
        // Activate selected
        this.classList.remove('border-gray-300');
        this.classList.add('border-gray-900', 'bg-gray-50');
        
        const indicator = indicators[index];
        if (indicator) {
          indicator.classList.remove('border-gray-300');
          indicator.classList.add('border-red-600');
          const dot = indicator.querySelector('div');
          if (dot) dot.classList.remove('opacity-0');
        }

        if (radio) radio.checked = true;
        selectedPaymentMethod = method;

        // Update pay button
        if (payButton) {
          payButton.disabled = false;
          payButton.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
            <span>Pagar ${formatPrice(order.total)}</span>
          `;
        }

        console.log('‚úÖ M√©todo seleccionado:', method);
      });
    });

    // Seleccionar primer m√©todo por defecto
    if (methodOptions.length > 0) {
      methodOptions[0].click();
    }
  }

  // ‚úÖ VERIFICAR Y CONFIGURAR WOMPI
  function checkWompiStatus() {
    const maxAttempts = 10;
    let attempts = 0;

    const checkInterval = setInterval(() => {
      attempts++;
      
      if (typeof WidgetCheckout !== 'undefined') {
        console.log('‚úÖ Wompi Widget disponible');
        isWompiReady = true;
        clearInterval(checkInterval);
        enablePaymentButton();
      } else if (attempts >= maxAttempts) {
        console.error('‚ùå Wompi Widget no pudo cargarse despu√©s de', maxAttempts, 'intentos');
        clearInterval(checkInterval);
        handleWompiUnavailable();
      }
    }, 500);
  }

  function enablePaymentButton() {
    const payButton = document.getElementById('pay-button');
    if (payButton && !payButton.disabled) {
      // Button is already enabled by payment method selection
      console.log('‚úÖ Bot√≥n de pago habilitado');
    }
  }

  function handleWompiUnavailable() {
    showError('Servicio de pagos temporalmente no disponible. Por favor intenta m√°s tarde.');
    
    const payButton = document.getElementById('pay-button');
    if (payButton) {
      payButton.disabled = true;
      payButton.innerHTML = `
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <span>Servicio no disponible</span>
      `;
    }

    // Mostrar m√©todos alternativos
    showAlternativePaymentInfo();
  }

  function showAlternativePaymentInfo() {
    const alternativeDiv = document.createElement('div');
    alternativeDiv.className = 'mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md';
    alternativeDiv.innerHTML = `
      <h4 class="font-medium text-yellow-800 mb-2">M√©todos de pago alternativos</h4>
      <p class="text-sm text-yellow-700 mb-2">Puedes realizar tu pago por:</p>
      <ul class="text-sm text-yellow-700 list-disc list-inside space-y-1">
        <li>Transferencia bancaria</li>
        <li>Dep√≥sito en efectivo</li>
        <li>Pago contraentrega</li>
      </ul>
      <p class="text-sm text-yellow-700 mt-2">
        <a href="/contacto" class="underline font-medium">Cont√°ctanos</a> para recibir instrucciones.
      </p>
    `;

    const paymentSection = document.querySelector('.lg\\:col-span-2');
    if (paymentSection) {
      paymentSection.appendChild(alternativeDiv);
    }
  }

  // ‚úÖ PROCESAR PAGO CON WOMPI
  async function processPayment() {
    if (!selectedPaymentMethod) {
      showError('Por favor selecciona un m√©todo de pago');
      return;
    }

    if (!isWompiReady) {
      showError('Servicio de pagos no disponible. Por favor recarga la p√°gina.');
      return;
    }

    if (paymentInProgress) {
      console.log('‚è≥ Pago ya en progreso, ignorando click adicional');
      return;
    }

    paymentInProgress = true;
    const payButton = document.getElementById('pay-button');

    try {
      // Deshabilitar bot√≥n y mostrar loading
      if (payButton) {
        payButton.disabled = true;
        payButton.innerHTML = `
          <svg class="w-5 h-5 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          <span>Iniciando pago...</span>
        `;
      }

      // ‚úÖ PREPARAR DATOS DE TRANSACCI√ìN
      const transactionData = {
        currency: 'COP',
        amountInCents: Math.round(order.total * 100),
        reference: order.order_number,
        publicKey: WOMPI_PUBLIC_KEY,
        redirectUrl: `${window.location.origin}/checkout/confirmacion?order=${order.id}`,
        customerData: {
          email: order.shipping_address?.email || '',
          fullName: order.shipping_address?.full_name || '',
          phoneNumber: order.shipping_address?.phone || ''
        },
        shippingAddress: {
          addressLine1: order.shipping_address?.address_line_1 || '',
          addressLine2: order.shipping_address?.address_line_2 || '',
          country: 'CO',
          region: order.shipping_address?.state || '',
          city: order.shipping_address?.city || '',
          name: order.shipping_address?.full_name || '',
          phoneNumber: order.shipping_address?.phone || '',
          postalCode: order.shipping_address?.postal_code || ''
        },
        paymentMethods: {
          installments: {
            default: 1,
            enabled: [1, 3, 6, 12, 24]
          }
        }
      };

      console.log('üí≥ Iniciando pago con Wompi:', {
        reference: transactionData.reference,
        amount: transactionData.amountInCents,
        method: selectedPaymentMethod
      });

      // ‚úÖ CREAR Y ABRIR WIDGET WOMPI
      const checkout = new WidgetCheckout(transactionData);

      checkout.open(function(result) {
        console.log('üè¶ Resultado del widget Wompi:', result);
        
        if (result.transaction) {
          handlePaymentResult(result.transaction);
        } else {
          console.log('üë§ Usuario cerr√≥ el widget sin completar el pago');
          resetPayButton();
        }
      });

    } catch (error) {
      console.error('‚ùå Error iniciando pago:', error);
      showError('Error al inicializar el pago. Por favor intenta de nuevo.');
      resetPayButton();
    }
  }

  // ‚úÖ MANEJAR RESULTADO DEL PAGO
  async function handlePaymentResult(transaction) {
    console.log('üìä Procesando resultado de transacci√≥n:', transaction);

    try {
      if (transaction.status === 'APPROVED') {
        console.log('‚úÖ Pago aprobado');
        showSuccess('¬°Pago exitoso! Redirigiendo...');
        
        // Actualizar estado de la orden
        await updateOrderPaymentStatus(order.id, transaction.id, 'completed');
        
        // Redirigir a confirmaci√≥n
        setTimeout(() => {
          window.location.href = `/checkout/confirmacion?order=${order.id}&transaction=${transaction.id}`;
        }, 2000);

      } else if (transaction.status === 'DECLINED' || transaction.status === 'FAILED') {
        console.log('‚ùå Pago rechazado/fallido');
        showError('Tu pago fue rechazado. Por favor intenta con otro m√©todo de pago.');
        resetPayButton();

      } else if (transaction.status === 'PENDING') {
        console.log('‚è≥ Pago pendiente');
        showSuccess('Pago en proceso. Te notificaremos cuando se confirme.');
        
        // Actualizar estado a pending
        await updateOrderPaymentStatus(order.id, transaction.id, 'pending');
        
        // Redirigir a p√°gina de espera
        setTimeout(() => {
          window.location.href = `/checkout/confirmacion?order=${order.id}&status=pending`;
        }, 2000);

      } else {
        console.log('‚ö†Ô∏è Estado de pago desconocido:', transaction.status);
        showError('Estado de pago incierto. Por favor contacta al soporte.');
        resetPayButton();
      }

    } catch (error) {
      console.error('‚ùå Error procesando resultado:', error);
      showError('Error procesando el resultado del pago. Por favor contacta al soporte.');
      resetPayButton();
    }
  }

  // ‚úÖ ACTUALIZAR ESTADO DE PAGO EN BACKEND
  async function updateOrderPaymentStatus(orderId, transactionId, status) {
    try {
      console.log('üîÑ Actualizando estado de pago:', { orderId, transactionId, status });

      const response = await fetch('/api/orders/update-payment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          order_id: orderId,
          payment_reference: transactionId,
          payment_status: status === 'completed' ? 'completed' : status
        })
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Error actualizando estado de pago');
      }

      const result = await response.json();
      console.log('‚úÖ Estado de pago actualizado:', result);
      
      return result;

    } catch (error) {
      console.error('‚ùå Error actualizando estado de pago:', error);
      throw error;
    }
  }

  // ‚úÖ RESETEAR BOT√ìN DE PAGO
  function resetPayButton() {
    paymentInProgress = false;
    const payButton = document.getElementById('pay-button');
    
    if (payButton && selectedPaymentMethod) {
      payButton.disabled = false;
      payButton.innerHTML = `
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
        </svg>
        <span>Pagar ${formatPrice(order.total)}</span>
      `;
    }
  }

  // ‚úÖ INICIALIZACI√ìN
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Iniciando configuraci√≥n de pagos...');
    
    // Configurar m√©todos de pago
    setupPaymentMethods();
    
    // Verificar estado de Wompi
    checkWompiStatus();
    
    // Event listener para bot√≥n de pago
    const payButton = document.getElementById('pay-button');
    if (payButton) {
      payButton.addEventListener('click', processPayment);
    }

    console.log('‚úÖ Configuraci√≥n de pagos completada');
  });

  // ‚úÖ MANEJO DE ERRORES GLOBALES
  window.addEventListener('error', function(event) {
    console.error('‚ùå Error global en p√°gina de pagos:', event.error);
    
    if (event.error && event.error.message && event.error.message.includes('WidgetCheckout')) {
      handleWompiUnavailable();
    }
  });

  // ‚úÖ PREVENIR SALIDA ACCIDENTAL DURANTE PAGO
  window.addEventListener('beforeunload', function(event) {
    if (paymentInProgress) {
      event.preventDefault();
      event.returnValue = 'Hay un pago en proceso. ¬øEst√°s seguro de que quieres salir?';
      return event.returnValue;
    }
  });

  console.log('‚úÖ Sistema de pagos v2.0 inicializado correctamente');
</script>

<!-- ‚úÖ ESTILOS ADICIONALES -->
<style>
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .payment-method-option:hover .payment-indicator {
    border-color: #6b7280;
  }

  .payment-method-option.selected {
    border-color: #111827 !important;
    background-color: #f9fafb;
  }
</style>