---
// src/pages/checkout/pagos.astro - VERSIÓN CORREGIDA SIN ERRORES DE SINTAXIS
import Layout from '../../components/layout/Layout.astro';
import { supabase } from '../../lib/supabase';
import type { Order } from '../../lib/types';

// ✅ OBTENER Y VALIDAR ORDER ID
const url = new URL(Astro.request.url);
const orderId = url.searchParams.get('order');

let order: Order | null = null;
let error: string | null = null;

// ✅ VALIDACIÓN Y CARGA DE ORDEN
if (!orderId) {
  error = 'ID de orden requerido';
} else {
  try {
    if (!supabase) {
      error = 'Servicio no disponible';
    } else {
      const { data, error: fetchError } = await supabase
        .from('orders')
        .select('*')
        .eq('id', orderId)
        .single();
    
      if (fetchError) {
        console.error('Error fetching order:', fetchError);
        error = 'Orden no encontrada';
      } else {
        order = data;
        if (order) {
          console.log('✅ Orden cargada para pago:', order.order_number);
        }
      }
    }
  } catch (err) {
    console.error('Error cargando orden:', err);
    error = 'Error cargando orden';
  }
}

// ✅ REDIRIGIR SI HAY ERROR
if (!order || error) {
  console.error('❌ Error en pagos:', error);
  return Astro.redirect('/checkout?error=' + encodeURIComponent(error || 'Orden no válida'));
}

// ✅ CONFIGURACIÓN WOMPI
const WOMPI_PUBLIC_KEY = import.meta.env.PUBLIC_WOMPI_PUBLIC_KEY || 'pub_test_QGtAUdYs7u3CQWmCk44nPbGQNEkwabKD';
const WOMPI_URL = import.meta.env.PUBLIC_WOMPI_URL || 'https://checkout.wompi.co';

// ✅ FUNCIÓN PARA FORMATEAR PRECIO
const formatPrice = (price: number): string => {
  try {
    const validPrice = typeof price === 'number' && !isNaN(price) && price >= 0 ? price : 0;
    return new Intl.NumberFormat('es-CO', {
      style: 'currency',
      currency: 'COP',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(validPrice);
  } catch (error) {
    return `$${price.toLocaleString('es-CO')}`;
  }
};
---

<Layout 
  title={`Pagar Pedido #${order.order_number} - mueblesmartek.com`}
  description="Completa tu pago de forma segura con Wompi"
>
  <div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-2xl font-bold text-gray-800 mb-2">Completar Pago</h1>
        <p class="text-gray-600">Pedido #{order.order_number}</p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        
        <!-- Columna Principal - Métodos de Pago -->
        <div class="lg:col-span-2">
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-6">Método de Pago</h2>
            
            <!-- Métodos de Pago -->
            <div class="space-y-4 mb-8">
              
              <!-- Tarjeta de Crédito/Débito -->
              <div class="payment-method-option border border-gray-200 rounded-lg p-4 cursor-pointer hover:border-gray-300 transition-colors" data-method="card">
                <div class="flex items-center">
                  <div class="payment-indicator w-4 h-4 border-2 border-gray-300 rounded-full mr-3"></div>
                  <div class="flex-1">
                    <h3 class="font-medium text-gray-800">Tarjeta de Crédito/Débito</h3>
                    <p class="text-sm text-gray-600">Visa, Mastercard, American Express</p>
                  </div>
                  <div class="flex space-x-2">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Visa_Logo.png" alt="Visa" class="h-6">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/2/2a/Mastercard-logo.svg" alt="Mastercard" class="h-6">
                  </div>
                </div>
              </div>

              <!-- PSE -->
              <div class="payment-method-option border border-gray-200 rounded-lg p-4 cursor-pointer hover:border-gray-300 transition-colors" data-method="pse">
                <div class="flex items-center">
                  <div class="payment-indicator w-4 h-4 border-2 border-gray-300 rounded-full mr-3"></div>
                  <div class="flex-1">
                    <h3 class="font-medium text-gray-800">PSE</h3>
                    <p class="text-sm text-gray-600">Pago Seguro en Línea</p>
                  </div>
                  <div class="text-blue-600 font-medium text-sm">Bancos</div>
                </div>
              </div>

              <!-- Nequi -->
              <div class="payment-method-option border border-gray-200 rounded-lg p-4 cursor-pointer hover:border-gray-300 transition-colors" data-method="nequi">
                <div class="flex items-center">
                  <div class="payment-indicator w-4 h-4 border-2 border-gray-300 rounded-full mr-3"></div>
                  <div class="flex-1">
                    <h3 class="font-medium text-gray-800">Nequi</h3>
                    <p class="text-sm text-gray-600">Pago desde tu celular</p>
                  </div>
                  <div class="bg-purple-100 text-purple-600 px-2 py-1 rounded text-xs font-medium">Popular</div>
                </div>
              </div>
            </div>

            <!-- Botón de Pago -->
            <button 
              id="pay-button" 
              disabled
              class="w-full bg-gray-400 text-white py-4 rounded-lg font-semibold text-lg transition-colors disabled:cursor-not-allowed"
            >
              <span>Selecciona un método de pago</span>
            </button>

            <!-- Información de Seguridad -->
            <div class="mt-6 flex items-center justify-center text-sm text-gray-500">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
              Tus datos están protegidos con SSL 256-bit
            </div>
          </div>
        </div>

        <!-- Resumen del Pedido -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Resumen del Pedido</h3>
            
            <!-- Productos -->
            {order.items && order.items.length > 0 && (
              <div class="space-y-3 mb-6">
                {order.items.map((item: any) => (
                  <div class="flex items-center space-x-3">
                    <div class="w-12 h-12 bg-gray-100 rounded-md flex items-center justify-center">
                      <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <h4 class="font-medium text-gray-800 text-sm">{item.product_name}</h4>
                      <p class="text-sm text-gray-500">Cantidad: {item.quantity}</p>
                    </div>
                    <div class="text-sm font-medium text-gray-800">
                      {formatPrice(item.total)}
                    </div>
                  </div>
                ))}
              </div>
            )}

            <!-- Totales -->
            <div class="border-t pt-4 space-y-2">
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Subtotal:</span>
                <span class="text-gray-800">{formatPrice(order.subtotal)}</span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Envío:</span>
                <span class="text-gray-800">
                  {order.shipping_cost > 0 ? formatPrice(order.shipping_cost) : 'Gratis'}
                </span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">IVA:</span>
                <span class="text-gray-800">{formatPrice(order.tax)}</span>
              </div>
              <div class="border-t pt-2 flex justify-between font-semibold">
                <span class="text-gray-800">Total:</span>
                <span class="text-gray-800">{formatPrice(order.total)}</span>
              </div>
            </div>

            <!-- Información de Envío -->
            <div class="mt-6 pt-6 border-t">
              <h4 class="font-medium text-gray-800 mb-3">Envío a:</h4>
              <div class="text-sm text-gray-600 space-y-1">
                <p class="font-medium text-gray-800">{order.shipping_address?.full_name}</p>
                <p>{order.shipping_address?.address_line_1}</p>
                <p>{order.shipping_address?.city}, {order.shipping_address?.state}</p>
                <p>{order.shipping_address?.postal_code}</p>
              </div>
            </div>

            <!-- Garantías -->
            <div class="mt-6 pt-6 border-t space-y-4">
              <div class="flex items-start space-x-3">
                <div class="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                  <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                </div>
                <div>
                  <h4 class="font-medium text-gray-800 text-sm">Entrega Garantizada</h4>
                  <p class="text-xs text-gray-600">3-5 días hábiles</p>
                </div>
              </div>
              
              <div class="flex items-start space-x-3">
                <div class="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                  <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div>
                  <h4 class="font-medium text-gray-800 text-sm">Garantía</h4>
                  <p class="text-xs text-gray-600">30 días</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<!-- ✅ CARGAR WOMPI SDK -->
<script src="https://checkout.wompi.co/widget.js"></script>

<!-- ✅ SCRIPT PRINCIPAL CORREGIDO -->
<script define:vars={{ 
  order: order,
  WOMPI_PUBLIC_KEY: WOMPI_PUBLIC_KEY
}}>
  console.log('🏦 Inicializando página de pagos...');

  // Variables globales
  let selectedPaymentMethod = null;
  let isWompiReady = false;
  let paymentInProgress = false;

  // Función para formatear precio
  function formatPrice(price) {
    try {
      return new Intl.NumberFormat('es-CO', {
        style: 'currency',
        currency: 'COP',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }).format(price);
    } catch (error) {
      return `$${price.toLocaleString('es-CO')}`;
    }
  }

  // Mostrar notificaciones
  function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-md shadow-lg transition-all duration-300 ${
      type === 'success' ? 'bg-green-600 text-white' :
      type === 'error' ? 'bg-red-600 text-white' :
      'bg-blue-600 text-white'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.remove();
    }, 5000);
  }

  // Configurar métodos de pago
  function setupPaymentMethods() {
    const methodOptions = document.querySelectorAll('.payment-method-option');
    const payButton = document.getElementById('pay-button');

    methodOptions.forEach(option => {
      option.addEventListener('click', function() {
        const method = this.dataset.method;
        
        // Remover selección anterior
        methodOptions.forEach(opt => {
          opt.classList.remove('border-blue-500', 'bg-blue-50');
          opt.querySelector('.payment-indicator').classList.remove('border-blue-500', 'bg-blue-500');
        });

        // Seleccionar nuevo método
        this.classList.add('border-blue-500', 'bg-blue-50');
        this.querySelector('.payment-indicator').classList.add('border-blue-500', 'bg-blue-500');
        
        selectedPaymentMethod = method;

        // Habilitar botón de pago
        if (payButton) {
          payButton.disabled = false;
          payButton.className = 'w-full bg-blue-600 hover:bg-blue-700 text-white py-4 rounded-lg font-semibold text-lg transition-colors';
          payButton.innerHTML = `
            <svg class="w-6 h-6 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
            Pagar ${formatPrice(order.total)}
          `;
        }
      });
    });

    // Seleccionar primer método por defecto
    if (methodOptions.length > 0) {
      methodOptions[0].click();
    }
  }

  // Verificar Wompi
  function checkWompiStatus() {
    const maxAttempts = 10;
    let attempts = 0;

    const checkInterval = setInterval(() => {
      attempts++;
      
      if (typeof WidgetCheckout !== 'undefined') {
        console.log('✅ Wompi disponible');
        isWompiReady = true;
        clearInterval(checkInterval);
      } else if (attempts >= maxAttempts) {
        console.error('❌ Wompi no disponible');
        showNotification('Servicio de pagos no disponible', 'error');
        clearInterval(checkInterval);
      }
    }, 500);
  }

  // Procesar pago
  async function processPayment() {
    if (!selectedPaymentMethod || paymentInProgress) {
      return;
    }

    if (!isWompiReady) {
      showNotification('Servicio de pagos no disponible', 'error');
      return;
    }

    paymentInProgress = true;
    const payButton = document.getElementById('pay-button');

    try {
      if (payButton) {
        payButton.disabled = true;
        payButton.innerHTML = 'Procesando...';
      }

      const transactionData = {
        currency: 'COP',
        amountInCents: Math.round(order.total * 100),
        reference: order.order_number,
        publicKey: WOMPI_PUBLIC_KEY,
        redirectUrl: `${window.location.origin}/checkout/confirmacion?order=${order.id}`,
        customerData: {
          email: order.shipping_address?.email || '',
          fullName: order.shipping_address?.full_name || ''
        }
      };

      console.log('💳 Iniciando pago con Wompi');

      const checkout = new WidgetCheckout(transactionData);
      checkout.open(function(result) {
        console.log('🏦 Resultado del pago:', result);
        
        if (result.transaction) {
          if (result.transaction.status === 'APPROVED') {
            showNotification('¡Pago exitoso! Redirigiendo...', 'success');
            setTimeout(() => {
              window.location.href = `/checkout/confirmacion?order=${order.id}&transaction=${result.transaction.id}`;
            }, 2000);
          } else {
            showNotification('Pago no completado', 'error');
            resetPayButton();
          }
        } else {
          resetPayButton();
        }
      });

    } catch (error) {
      console.error('❌ Error en pago:', error);
      showNotification('Error procesando pago', 'error');
      resetPayButton();
    }
  }

  // Resetear botón
  function resetPayButton() {
    paymentInProgress = false;
    const payButton = document.getElementById('pay-button');
    
    if (payButton && selectedPaymentMethod) {
      payButton.disabled = false;
      payButton.className = 'w-full bg-blue-600 hover:bg-blue-700 text-white py-4 rounded-lg font-semibold text-lg transition-colors';
      payButton.innerHTML = `
        <svg class="w-6 h-6 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2-2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
        </svg>
        Pagar ${formatPrice(order.total)}
      `;
    }
  }

  // Inicialización
  document.addEventListener('DOMContentLoaded', function() {
    setupPaymentMethods();
    checkWompiStatus();
    
    const payButton = document.getElementById('pay-button');
    if (payButton) {
      payButton.addEventListener('click', processPayment);
    }
  });
</script>